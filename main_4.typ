// main_4.typ

// This file is generated by Typst, a typesetting tool for literate programming.
// It is not intended to be edited directly.

// ----------
// metadata for title and top right header for each page
// ----------

#let title = [
  Classic of Mountains and Seas
]

#let ref_number = [
  9876/2025
]

// ----------
// set global: page size, margin, header
// ----------


#set page(
  paper: "a4",
  margin: (x: 2.54cm, y: 2.54cm),
  header: align(
    right + horizon,
    ref_number,
  ),
  columns: 1,
  numbering: "1 of 1",
) // no need to use # for ref_number function because it is set in function set. no need to have double #.


// ----------
// set title, author and abstract
// ----------

#align(center, text(17pt)[
  *#title*
  ]
) // need to have # for function title because it is a function not cited within set.

// one author

#grid(
  columns: (1fr),
    align(center)[
      Nezha Li \
      Flaming Mountain Institute \
      #link("mailto:nezha@flaming.edu")
    ]
)
  
#align(center)[
  #set par(justify: false)
  *Abstract* \
  #lorem(80)
]



// ------------
// text justified
// ------------

#set par(
  justify: true,
  first-line-indent: 1em,
)

// ------------
// text
// ------------

#set text(
  font: (
    "Libertinus Serif",
    "STFangsong",
  ),
  // lang: "cn",
  lang: "en",
  region: "ca",
  size: 10pt,
  hyphenate: auto,
)



// ------------
// numbering in table of contents
// ------------


#let chapter-count = counter("chapter counter")
#show heading.where(level: 2): it => chapter-count.step() + it
#set heading(numbering: (..nums) => {
  if nums.pos().len() == 1 {
    // Level 1: Roman numerals for Parts.
    numbering("A.", ..nums)
  } else if nums.pos().len() == 2 {
    // Level 2: Use the chapter state counter and increment it.
    str(chapter-count.get().first() + 1)
    // or
    // context numbering("1", ..chapter-count.get())
  } else {
    // Level 3+: Use the chapter number followed by the position within that chapter.
    numbering("1.1", ..chapter-count.get(), ..nums.pos().slice(2))
  }
})

// ------------
// bibliography style
// ------------

#set bibliography(
  style: "american-psychological-association",
)



// -----------
// Table of Contents
// -----------------------

#outline(
  title:  "Table of Contents",
)

#outline(target: figure.where(kind: image), title: "List of Figures")

#outline(target: figure.where(kind: table), title: "List of Tables")

#outline(target: heading.where(supplement: [Appendix]), title: [List of Appendices])

// ------------
// paragraph numbering for contents
// ------------

#let p = counter("p")
#let step = p.step()
#let nr = context p.display()
#show par: it => {
  if it.body.at("children", default: ()).at(0, default: none) == step {
    return it
  }
  par(step + [#nr. #h(2em)] + it.body)
}

#set par(first-line-indent: (
  amount: 0em,
  all: true,
))

// ------------
// start contents
// ------------

#include "index.typ"
